<?php

/**
 * DummyFullModelClass GraphQL Query
 *
 * Standard GraphQL Query for the DummyModelClass Model.
 *
 * @package   DummyPackagePlaceholder
 * @author    DummyAuthorPlaceholder
 * @copyright DummyCopyrightPlaceholder
 * @license   DummyLicensePlaceholder
 */

namespace DummyNamespace;

use DummyFullModelClass;
use GraphQL;
use GraphQL\Type\Definition\Type;
use Rebing\GraphQL\Support\Query;

class DummyPluralModelClassQuery extends Query
{
    /**
     * Query Attributes.
     *
     * @var array
     */
    protected $attributes = [
        'name' => 'DummyPluralModelClass query',
    ];

    /**
     * Define the type.
     *
     * @return type List of DummyModelVariable.
     */
    public function type()
    {
        return Type::listOf(GraphQL::type('DummyModelVariable'));
    }

    /**
     * Define the available arguments.
     *
     * @return array Arguments that are available.
     */
    public function args()
    {
        return [
            'id' => ['name' => 'id', 'type' => Type::int()],
            {{schema_args}}
        ];
    }

    /**
     * Resolve the request.
     *
     * @param string $root Root node.
     * @param array  $args Argumnents from request.
     *
     * @return DummyFullModelClass DummyModelClass
     */
    public function resolve($root, $args)
    {
        if (isset($args['id']) === true) {
            return DummyModelClass::where('id', $args['id'])->get();
        }

        {{schema_resolves}}
        return DummyModelClass::all();
    }
}
